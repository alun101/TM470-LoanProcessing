// Dafny program BankSystem.dfy compiled into C#
// To recompile, you will need the libraries
//     System.Runtime.Numerics.dll System.Collections.Immutable.dll
// but the 'dotnet' tool in net6.0 should pick those up automatically.
// Optionally, you may want to include compiler switches like
//     /debug /nowarn:162,164,168,183,219,436,1717,1718

//--------------------------------------------------------------------------------------------------------------------
// <auto-generated>
//  This code was generated by a tool.
//    Dafny 4.7.0.0
//  Changes to this file may cause incorrect behaviour and will be lost
//  if the code is regenerated. 
// </auto-generated>
//--------------------------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------------------------
//
// Verified Loan Application Processing - TM470
// Alun Evans
//
//--------------------------------------------------------------------------------------------------------------------

using System;
using System.Numerics;
using System.Collections;

namespace Dafny {
  internal class ArrayHelpers {
    public static T[] InitNewArray1<T>(T z, BigInteger size0) {
      int s0 = (int)size0;
      T[] a = new T[s0];
      for (int i0 = 0; i0 < s0; i0++) {
        a[i0] = z;
      }
      return a;
    }
  }
} // end of namespace Dafny
internal static class FuncExtensions {
  public static Func<U, UResult> DowncastClone<T, TResult, U, UResult>(this Func<T, TResult> F, Func<U, T> ArgConv, Func<TResult, UResult> ResConv) {
    return arg => ResConv(F(ArgConv(arg)));
  }
  public static Func<UResult> DowncastClone<TResult, UResult>(this Func<TResult> F, Func<TResult, UResult> ResConv) {
    return () => ResConv(F());
  }
}
namespace Support {


  public partial class CreditReferenceAgency {
    public CreditReferenceAgency() {
      this.creditScores = Dafny.Map<Dafny.ISequence<Dafny.Rune>, BigInteger>.Empty;
    }
    public Dafny.IMap<Dafny.ISequence<Dafny.Rune>,BigInteger> creditScores {get; set;}
    public void __ctor()
    {
    }
    public void addPerson(Dafny.ISequence<Dafny.Rune> name, BigInteger creditScoreSetup)
    {
      (this).creditScores = Dafny.Map<Dafny.ISequence<Dafny.Rune>, BigInteger>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.Rune>, BigInteger>(name, creditScoreSetup));
    }
    public BigInteger getCreditScore(Dafny.ISequence<Dafny.Rune> name)
    {
      BigInteger creditScore = BigInteger.Zero;
      creditScore = Dafny.Map<Dafny.ISequence<Dafny.Rune>, BigInteger>.Select(this.creditScores,name);
      return creditScore;
    }
    public static BigInteger creditScoreMin { get {
      return BigInteger.Zero;
    } }
    public static BigInteger creditScoreMax { get {
      return new BigInteger(999);
    } }
    public static BigInteger creditScoreGood { get {
      return new BigInteger(881);
    } }
  }
} // end of namespace Support
namespace Product {


  public partial class PersonalLoan {
    public PersonalLoan() {
      this.statusPending = false;
      this.statusRejected = false;
      this.statusApproved = false;
      this._requiredAmount = BigInteger.Zero;
      this._repaymentPeriod = BigInteger.Zero;
      this._interestRate = Dafny.BigRational.ZERO;
      this._totalAmountRepayable = Dafny.BigRational.ZERO;
      this._referenceNumber = BigInteger.Zero;
      this._monthlyRepaymentAmount = Dafny.BigRational.ZERO;
    }
    public static void calculateRepayment(BigInteger anAmount, BigInteger repaymentPeriod, out Dafny.BigRational totalAmountRepayable, out Dafny.BigRational monthlyRepaymentAmount)
    {
      totalAmountRepayable = Dafny.BigRational.ZERO;
      monthlyRepaymentAmount = Dafny.BigRational.ZERO;
      Dafny.BigRational _0_totalAmount = Dafny.BigRational.ZERO;
      if ((repaymentPeriod) == (new BigInteger(24))) {
        _0_totalAmount = Dafny.Map<BigInteger, Dafny.BigRational>.Select(Product.PersonalLoan.monthLoan24,anAmount);
      } else if ((repaymentPeriod) == (new BigInteger(36))) {
        _0_totalAmount = Dafny.Map<BigInteger, Dafny.BigRational>.Select(Product.PersonalLoan.monthLoan36,anAmount);
      } else if ((repaymentPeriod) == (new BigInteger(48))) {
        _0_totalAmount = Dafny.Map<BigInteger, Dafny.BigRational>.Select(Product.PersonalLoan.monthLoan48,anAmount);
      } else if ((repaymentPeriod) == (new BigInteger(60))) {
        _0_totalAmount = Dafny.Map<BigInteger, Dafny.BigRational>.Select(Product.PersonalLoan.monthLoan60,anAmount);
      } else {
        throw new System.Exception("unreachable alternative");
      }
      Dafny.BigRational _1_monthlyAmount;
      _1_monthlyAmount = (_0_totalAmount) / (new Dafny.BigRational((repaymentPeriod), BigInteger.One));
      Dafny.BigRational _rhs0 = _0_totalAmount;
      Dafny.BigRational _rhs1 = _1_monthlyAmount;
      totalAmountRepayable = _rhs0;
      monthlyRepaymentAmount = _rhs1;
      return ;
    }
    public bool statusPending {get; set;}
    public bool statusRejected {get; set;}
    public bool statusApproved {get; set;}
    public void __ctor(BigInteger aRequiredAmount, BigInteger aRepaymentPeriod, Dafny.BigRational anInterestRate, BigInteger aReferenceNumber)
    {
      (this)._referenceNumber = aReferenceNumber;
      (this)._requiredAmount = aRequiredAmount;
      (this)._repaymentPeriod = aRepaymentPeriod;
      (this)._interestRate = anInterestRate;
      Dafny.BigRational _2_total;
      Dafny.BigRational _3_monthly;
      Dafny.BigRational _out0;
      Dafny.BigRational _out1;
      Product.PersonalLoan.calculateRepayment(aRequiredAmount, aRepaymentPeriod, out _out0, out _out1);
      _2_total = _out0;
      _3_monthly = _out1;
      (this)._totalAmountRepayable = _2_total;
      (this)._monthlyRepaymentAmount = _3_monthly;
      (this).statusPending = true;
      (this).statusRejected = false;
      (this).statusApproved = false;
    }
    public void setStatus(Dafny.ISequence<Dafny.Rune> status)
    {
      if ((status).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pending"))) {
        (this).setStatusPending();
      } else if ((status).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rejected"))) {
        (this).setStatusRejected();
      } else if ((status).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("approved"))) {
        (this).setStatusApproved();
      } else {
        throw new System.Exception("unreachable alternative");
      }
    }
    public void setStatusPending()
    {
      (this).statusRejected = false;
      (this).statusApproved = false;
      (this).statusPending = true;
    }
    public void setStatusRejected()
    {
      (this).statusPending = false;
      (this).statusApproved = false;
      (this).statusRejected = true;
    }
    public void setStatusApproved()
    {
      (this).statusPending = false;
      (this).statusRejected = false;
      (this).statusApproved = true;
    }
    public Dafny.ISequence<Dafny.Rune> getStatus()
    {
      Dafny.ISequence<Dafny.Rune> status = Dafny.Sequence<Dafny.Rune>.Empty;
      if ((this.statusPending) == (true)) {
        status = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pending");
        return status;
      } else if ((this.statusRejected) == (true)) {
        status = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rejected");
        return status;
      } else if ((this.statusApproved) == (true)) {
        status = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("approved");
        return status;
      } else {
        throw new System.Exception("unreachable alternative");
      }
    }
    public bool verifyAgeCriteria(BigInteger customerAge)
    {
      bool isVerified = false;
      BigInteger _4_ageWhenLoanComplete;
      _4_ageWhenLoanComplete = ((customerAge) * (new BigInteger(12))) + ((this).repaymentPeriod);
      isVerified = (_4_ageWhenLoanComplete) <= (Product.PersonalLoan.maxAge);
      return isVerified;
    }
    public bool verifyIncomeCriteria(Dafny.BigRational customerMonthlyIncome, Dafny.BigRational customerMonthlyOutgoings)
    {
      bool isVerified = false;
      Dafny.BigRational _5_totalOutgoings;
      _5_totalOutgoings = (customerMonthlyOutgoings) + ((this).monthlyRepaymentAmount);
      Dafny.BigRational _6_adjustedIncommings;
      _6_adjustedIncommings = (customerMonthlyIncome) * (Product.PersonalLoan.incomeAffordabilityThreshold);
      isVerified = (_6_adjustedIncommings) >= (_5_totalOutgoings);
      return isVerified;
    }
    public bool verifyCreditScore(BigInteger customerCreditScore)
    {
      bool isVerified = false;
      isVerified = (customerCreditScore) >= (Product.PersonalLoan.goodCreditScoreThreshold);
      return isVerified;
    }
    public BigInteger getLoanReference()
    {
      BigInteger reference = BigInteger.Zero;
      reference = (this).referenceNumber;
      return reference;
    }
    public BigInteger getRequiredAmount()
    {
      BigInteger amount = BigInteger.Zero;
      amount = (this).requiredAmount;
      return amount;
    }
    public void printLoanDetails()
    {
      Dafny.ISequence<Dafny.Rune> _7_ref;
      _7_ref = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Loan reference number: ");
      Dafny.ISequence<Dafny.Rune> _8_amount;
      _8_amount = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Required amount: £");
      Dafny.ISequence<Dafny.Rune> _9_period;
      _9_period = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Required repayment period: ");
      Dafny.ISequence<Dafny.Rune> _10_rate;
      _10_rate = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Interest rate ");
      Dafny.ISequence<Dafny.Rune> _11_total;
      _11_total = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Total repayable amount: £");
      Dafny.ISequence<Dafny.Rune> _12_monthly;
      _12_monthly = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Monthly repayable amount: £");
      Dafny.ISequence<Dafny.Rune> _13_status;
      _13_status = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Current loan status: ");
      Dafny.ISequence<Dafny.Rune> _14_currentStatus;
      Dafny.ISequence<Dafny.Rune> _out2;
      _out2 = (this).getStatus();
      _14_currentStatus = _out2;
      Dafny.Helpers.Print((_7_ref).ToVerbatimString(false));
      Dafny.Helpers.Print(((this).referenceNumber));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
      Dafny.Helpers.Print((_8_amount).ToVerbatimString(false));
      Dafny.Helpers.Print(((this).requiredAmount));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".00")).ToVerbatimString(false));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
      Dafny.Helpers.Print((_9_period).ToVerbatimString(false));
      Dafny.Helpers.Print(((this).repaymentPeriod));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" months")).ToVerbatimString(false));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
      Dafny.Helpers.Print((_10_rate).ToVerbatimString(false));
      Dafny.Helpers.Print(((this).interestRate));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%")).ToVerbatimString(false));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
      Dafny.Helpers.Print((_11_total).ToVerbatimString(false));
      Dafny.Helpers.Print(((this).totalAmountRepayable));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
      Dafny.Helpers.Print((_12_monthly).ToVerbatimString(false));
      Dafny.Helpers.Print(((this).monthlyRepaymentAmount));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
      Dafny.Helpers.Print((_13_status).ToVerbatimString(false));
      Dafny.Helpers.Print((_14_currentStatus).ToVerbatimString(false));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
    }
    public static Dafny.IMap<BigInteger,Dafny.BigRational> monthLoan24 { get {
      return Dafny.Map<BigInteger, Dafny.BigRational>.FromElements(new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5000), new Dafny.BigRational(new BigInteger(569472), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5100), new Dafny.BigRational(new BigInteger(580872), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5200), new Dafny.BigRational(new BigInteger(592272), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5300), new Dafny.BigRational(new BigInteger(603648), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5400), new Dafny.BigRational(new BigInteger(615048), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5500), new Dafny.BigRational(new BigInteger(626424), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5600), new Dafny.BigRational(new BigInteger(637824), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5700), new Dafny.BigRational(BigInteger.Parse("6492"), BigInteger.One)), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5800), new Dafny.BigRational(BigInteger.Parse("6606"), BigInteger.One)), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5900), new Dafny.BigRational(BigInteger.Parse("6720"), BigInteger.One)), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6000), new Dafny.BigRational(new BigInteger(683376), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6100), new Dafny.BigRational(new BigInteger(694776), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6200), new Dafny.BigRational(new BigInteger(706152), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6300), new Dafny.BigRational(new BigInteger(717552), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6400), new Dafny.BigRational(new BigInteger(728928), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6500), new Dafny.BigRational(new BigInteger(740328), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6600), new Dafny.BigRational(new BigInteger(751728), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6700), new Dafny.BigRational(new BigInteger(763104), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6800), new Dafny.BigRational(new BigInteger(774504), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6900), new Dafny.BigRational(new BigInteger(78588), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7000), new Dafny.BigRational(new BigInteger(79728), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7100), new Dafny.BigRational(new BigInteger(808656), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7200), new Dafny.BigRational(new BigInteger(820056), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7300), new Dafny.BigRational(new BigInteger(831456), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7400), new Dafny.BigRational(new BigInteger(842832), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7500), new Dafny.BigRational(new BigInteger(798792), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7600), new Dafny.BigRational(new BigInteger(809424), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7700), new Dafny.BigRational(new BigInteger(82008), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7800), new Dafny.BigRational(new BigInteger(830736), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7900), new Dafny.BigRational(new BigInteger(841392), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8000), new Dafny.BigRational(new BigInteger(852048), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8100), new Dafny.BigRational(new BigInteger(86268), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8200), new Dafny.BigRational(new BigInteger(873336), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8300), new Dafny.BigRational(new BigInteger(883992), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8400), new Dafny.BigRational(new BigInteger(894648), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8500), new Dafny.BigRational(new BigInteger(90528), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8600), new Dafny.BigRational(new BigInteger(915936), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8700), new Dafny.BigRational(new BigInteger(926592), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8800), new Dafny.BigRational(new BigInteger(937248), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8900), new Dafny.BigRational(new BigInteger(94788), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9000), new Dafny.BigRational(new BigInteger(958536), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9100), new Dafny.BigRational(new BigInteger(969192), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9200), new Dafny.BigRational(new BigInteger(979848), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9300), new Dafny.BigRational(new BigInteger(990504), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9400), new Dafny.BigRational(new BigInteger(1001136), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9500), new Dafny.BigRational(new BigInteger(1011792), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9600), new Dafny.BigRational(new BigInteger(1022448), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9700), new Dafny.BigRational(new BigInteger(1033104), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9800), new Dafny.BigRational(new BigInteger(1043736), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9900), new Dafny.BigRational(new BigInteger(1054392), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(10000), new Dafny.BigRational(new BigInteger(1065048), BigInteger.Parse("100"))));
    } }
    public static Dafny.IMap<BigInteger,Dafny.BigRational> monthLoan36 { get {
      return Dafny.Map<BigInteger, Dafny.BigRational>.FromElements(new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5000), new Dafny.BigRational(new BigInteger(604908), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5100), new Dafny.BigRational(new BigInteger(617004), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5200), new Dafny.BigRational(new BigInteger(629136), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5300), new Dafny.BigRational(new BigInteger(641232), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5400), new Dafny.BigRational(new BigInteger(653328), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5500), new Dafny.BigRational(new BigInteger(665424), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5600), new Dafny.BigRational(new BigInteger(67752), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5700), new Dafny.BigRational(new BigInteger(689616), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5800), new Dafny.BigRational(new BigInteger(701712), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5900), new Dafny.BigRational(new BigInteger(713808), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6000), new Dafny.BigRational(new BigInteger(725904), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6100), new Dafny.BigRational(BigInteger.Parse("7380"), BigInteger.One)), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6200), new Dafny.BigRational(new BigInteger(750096), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6300), new Dafny.BigRational(new BigInteger(762192), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6400), new Dafny.BigRational(new BigInteger(774288), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6500), new Dafny.BigRational(new BigInteger(786384), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6600), new Dafny.BigRational(new BigInteger(798516), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6700), new Dafny.BigRational(new BigInteger(810612), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6800), new Dafny.BigRational(new BigInteger(822708), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6900), new Dafny.BigRational(new BigInteger(834804), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7000), new Dafny.BigRational(BigInteger.Parse("8469"), BigInteger.One)), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7100), new Dafny.BigRational(new BigInteger(858996), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7200), new Dafny.BigRational(new BigInteger(871092), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7300), new Dafny.BigRational(new BigInteger(883188), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7400), new Dafny.BigRational(new BigInteger(895284), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7500), new Dafny.BigRational(new BigInteger(822924), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7600), new Dafny.BigRational(new BigInteger(833904), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7700), new Dafny.BigRational(new BigInteger(844884), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7800), new Dafny.BigRational(new BigInteger(855828), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7900), new Dafny.BigRational(new BigInteger(866808), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8000), new Dafny.BigRational(new BigInteger(877788), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8100), new Dafny.BigRational(new BigInteger(888768), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8200), new Dafny.BigRational(new BigInteger(899712), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8300), new Dafny.BigRational(new BigInteger(910692), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8400), new Dafny.BigRational(new BigInteger(921672), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8500), new Dafny.BigRational(new BigInteger(932652), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8600), new Dafny.BigRational(new BigInteger(943632), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8700), new Dafny.BigRational(new BigInteger(954576), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8800), new Dafny.BigRational(new BigInteger(965556), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8900), new Dafny.BigRational(new BigInteger(976536), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9000), new Dafny.BigRational(new BigInteger(987516), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9100), new Dafny.BigRational(new BigInteger(998496), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9200), new Dafny.BigRational(new BigInteger(100944), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9300), new Dafny.BigRational(new BigInteger(102042), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9400), new Dafny.BigRational(BigInteger.Parse("10314"), BigInteger.One)), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9500), new Dafny.BigRational(new BigInteger(104238), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9600), new Dafny.BigRational(new BigInteger(1053324), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9700), new Dafny.BigRational(new BigInteger(1064304), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9800), new Dafny.BigRational(new BigInteger(1075284), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9900), new Dafny.BigRational(new BigInteger(1086264), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(10000), new Dafny.BigRational(new BigInteger(1097244), BigInteger.Parse("100"))));
    } }
    public static Dafny.IMap<BigInteger,Dafny.BigRational> monthLoan48 { get {
      return Dafny.Map<BigInteger, Dafny.BigRational>.FromElements(new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5000), new Dafny.BigRational(new BigInteger(641712), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5100), new Dafny.BigRational(new BigInteger(654528), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5200), new Dafny.BigRational(new BigInteger(667392), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5300), new Dafny.BigRational(new BigInteger(680208), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5400), new Dafny.BigRational(new BigInteger(693024), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5500), new Dafny.BigRational(new BigInteger(705888), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5600), new Dafny.BigRational(new BigInteger(718704), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5700), new Dafny.BigRational(new BigInteger(731568), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5800), new Dafny.BigRational(new BigInteger(744384), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5900), new Dafny.BigRational(BigInteger.Parse("7572"), BigInteger.One)), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6000), new Dafny.BigRational(new BigInteger(770064), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6100), new Dafny.BigRational(new BigInteger(78288), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6200), new Dafny.BigRational(new BigInteger(795696), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6300), new Dafny.BigRational(new BigInteger(80856), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6400), new Dafny.BigRational(new BigInteger(821376), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6500), new Dafny.BigRational(new BigInteger(83424), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6600), new Dafny.BigRational(new BigInteger(847056), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6700), new Dafny.BigRational(new BigInteger(859872), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6800), new Dafny.BigRational(new BigInteger(872736), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6900), new Dafny.BigRational(new BigInteger(885552), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7000), new Dafny.BigRational(new BigInteger(898368), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7100), new Dafny.BigRational(new BigInteger(911232), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7200), new Dafny.BigRational(new BigInteger(924048), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7300), new Dafny.BigRational(new BigInteger(936912), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7400), new Dafny.BigRational(new BigInteger(949728), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7500), new Dafny.BigRational(new BigInteger(847536), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7600), new Dafny.BigRational(new BigInteger(858816), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7700), new Dafny.BigRational(new BigInteger(870144), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7800), new Dafny.BigRational(new BigInteger(881424), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7900), new Dafny.BigRational(new BigInteger(892704), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8000), new Dafny.BigRational(new BigInteger(904032), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8100), new Dafny.BigRational(new BigInteger(915312), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8200), new Dafny.BigRational(new BigInteger(92664), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8300), new Dafny.BigRational(new BigInteger(93792), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8400), new Dafny.BigRational(new BigInteger(949248), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8500), new Dafny.BigRational(new BigInteger(960528), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8600), new Dafny.BigRational(new BigInteger(971808), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8700), new Dafny.BigRational(new BigInteger(983136), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8800), new Dafny.BigRational(new BigInteger(994416), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8900), new Dafny.BigRational(new BigInteger(1005744), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9000), new Dafny.BigRational(new BigInteger(1017024), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9100), new Dafny.BigRational(new BigInteger(1028352), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9200), new Dafny.BigRational(new BigInteger(1039632), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9300), new Dafny.BigRational(new BigInteger(1050912), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9400), new Dafny.BigRational(new BigInteger(106224), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9500), new Dafny.BigRational(new BigInteger(107352), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9600), new Dafny.BigRational(new BigInteger(1084848), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9700), new Dafny.BigRational(new BigInteger(1096128), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9800), new Dafny.BigRational(new BigInteger(1107456), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9900), new Dafny.BigRational(new BigInteger(1118736), BigInteger.Parse("100"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(10000), new Dafny.BigRational(new BigInteger(1130016), BigInteger.Parse("100"))));
    } }
    public static Dafny.IMap<BigInteger,Dafny.BigRational> monthLoan60 { get {
      return Dafny.Map<BigInteger, Dafny.BigRational>.FromElements(new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5000), new Dafny.BigRational(BigInteger.Parse("6798"), BigInteger.One)), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5100), new Dafny.BigRational(new BigInteger(69342), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5200), new Dafny.BigRational(new BigInteger(70698), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5300), new Dafny.BigRational(BigInteger.Parse("7206"), BigInteger.One)), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5400), new Dafny.BigRational(new BigInteger(73422), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5500), new Dafny.BigRational(new BigInteger(74778), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5600), new Dafny.BigRational(BigInteger.Parse("7614"), BigInteger.One)), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5700), new Dafny.BigRational(new BigInteger(77496), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5800), new Dafny.BigRational(new BigInteger(78858), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(5900), new Dafny.BigRational(BigInteger.Parse("8022"), BigInteger.One)), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6000), new Dafny.BigRational(new BigInteger(81576), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6100), new Dafny.BigRational(new BigInteger(82938), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6200), new Dafny.BigRational(BigInteger.Parse("8430"), BigInteger.One)), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6300), new Dafny.BigRational(new BigInteger(85656), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6400), new Dafny.BigRational(new BigInteger(87018), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6500), new Dafny.BigRational(new BigInteger(88374), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6600), new Dafny.BigRational(new BigInteger(89736), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6700), new Dafny.BigRational(new BigInteger(91098), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6800), new Dafny.BigRational(new BigInteger(92454), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(6900), new Dafny.BigRational(new BigInteger(93816), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7000), new Dafny.BigRational(new BigInteger(95172), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7100), new Dafny.BigRational(new BigInteger(96534), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7200), new Dafny.BigRational(new BigInteger(97896), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7300), new Dafny.BigRational(new BigInteger(99252), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7400), new Dafny.BigRational(new BigInteger(100614), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7500), new Dafny.BigRational(new BigInteger(87258), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7600), new Dafny.BigRational(new BigInteger(88422), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7700), new Dafny.BigRational(new BigInteger(89586), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7800), new Dafny.BigRational(BigInteger.Parse("9075"), BigInteger.One)), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(7900), new Dafny.BigRational(new BigInteger(91914), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8000), new Dafny.BigRational(new BigInteger(93078), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8100), new Dafny.BigRational(new BigInteger(94242), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8200), new Dafny.BigRational(new BigInteger(95406), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8300), new Dafny.BigRational(BigInteger.Parse("9657"), BigInteger.One)), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8400), new Dafny.BigRational(new BigInteger(97728), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8500), new Dafny.BigRational(new BigInteger(98892), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8600), new Dafny.BigRational(new BigInteger(100056), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8700), new Dafny.BigRational(BigInteger.Parse("10112"), BigInteger.One)), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8800), new Dafny.BigRational(new BigInteger(102384), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(8900), new Dafny.BigRational(new BigInteger(103548), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9000), new Dafny.BigRational(new BigInteger(104712), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9100), new Dafny.BigRational(new BigInteger(105876), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9200), new Dafny.BigRational(BigInteger.Parse("10704"), BigInteger.One)), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9300), new Dafny.BigRational(new BigInteger(108204), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9400), new Dafny.BigRational(new BigInteger(109368), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9500), new Dafny.BigRational(new BigInteger(110526), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9600), new Dafny.BigRational(BigInteger.Parse("11169"), BigInteger.One)), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9700), new Dafny.BigRational(new BigInteger(112854), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9800), new Dafny.BigRational(new BigInteger(114018), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(9900), new Dafny.BigRational(new BigInteger(115182), BigInteger.Parse("10"))), new Dafny.Pair<BigInteger, Dafny.BigRational>(new BigInteger(10000), new Dafny.BigRational(new BigInteger(116346), BigInteger.Parse("10"))));
    } }
    public static Dafny.BigRational lowInterestRate { get {
      return new Dafny.BigRational(new BigInteger(63), BigInteger.Parse("10"));
    } }
    public static Dafny.BigRational highInterestRate { get {
      return new Dafny.BigRational(new BigInteger(136), BigInteger.Parse("10"));
    } }
    public BigInteger _requiredAmount {get; set;}
    public BigInteger requiredAmount { get {
      return this._requiredAmount;
    } }
    public BigInteger _repaymentPeriod {get; set;}
    public BigInteger repaymentPeriod { get {
      return this._repaymentPeriod;
    } }
    public Dafny.BigRational _interestRate {get; set;}
    public Dafny.BigRational interestRate { get {
      return this._interestRate;
    } }
    public Dafny.BigRational _totalAmountRepayable {get; set;}
    public Dafny.BigRational totalAmountRepayable { get {
      return this._totalAmountRepayable;
    } }
    public BigInteger _referenceNumber {get; set;}
    public BigInteger referenceNumber { get {
      return this._referenceNumber;
    } }
    public Dafny.BigRational _monthlyRepaymentAmount {get; set;}
    public Dafny.BigRational monthlyRepaymentAmount { get {
      return this._monthlyRepaymentAmount;
    } }
    public static BigInteger maxAge { get {
      return (new BigInteger(67)) * (new BigInteger(12));
    } }
    public static Dafny.BigRational incomeAffordabilityThreshold { get {
      return new Dafny.BigRational(new BigInteger(8), BigInteger.Parse("10"));
    } }
    public static BigInteger goodCreditScoreThreshold { get {
      return new BigInteger(881);
    } }
  }
} // end of namespace Product
namespace User {


  public partial class Customer {
    public Customer() {
      this._name = Dafny.Sequence<Dafny.Rune>.Empty;
      this._age = BigInteger.Zero;
      this._accountNumber = Dafny.Sequence<Dafny.Rune>.Empty;
      this._sortCode = Dafny.Sequence<Dafny.Rune>.Empty;
      this._monthlyIncome = Dafny.BigRational.ZERO;
      this._monthlyOutgoings = Dafny.BigRational.ZERO;
      this._customerReference = BigInteger.Zero;
    }
    public void __ctor(Dafny.ISequence<Dafny.Rune> aName, BigInteger anAge, Dafny.ISequence<Dafny.Rune> anAccountNumber, Dafny.ISequence<Dafny.Rune> aSortCode, Dafny.BigRational aMonthlyIncome, Dafny.BigRational aMonthlyOutgoing, BigInteger aReference)
    {
      (this)._name = aName;
      (this)._age = anAge;
      (this)._accountNumber = anAccountNumber;
      (this)._sortCode = aSortCode;
      (this)._monthlyIncome = aMonthlyIncome;
      (this)._monthlyOutgoings = aMonthlyOutgoing;
      (this)._customerReference = aReference;
    }
    public Dafny.ISequence<Dafny.Rune> getName()
    {
      Dafny.ISequence<Dafny.Rune> customerName = Dafny.Sequence<Dafny.Rune>.Empty;
      customerName = (this).name;
      return customerName;
    }
    public BigInteger getAge()
    {
      BigInteger customerAge = BigInteger.Zero;
      customerAge = (this).age;
      return customerAge;
    }
    public void getPaymentDetails(out Dafny.ISequence<Dafny.Rune> accountNumber, out Dafny.ISequence<Dafny.Rune> sortCode)
    {
      accountNumber = Dafny.Sequence<Dafny.Rune>.Empty;
      sortCode = Dafny.Sequence<Dafny.Rune>.Empty;
      Dafny.ISequence<Dafny.Rune> _rhs2 = (this).accountNumber;
      Dafny.ISequence<Dafny.Rune> _rhs3 = (this).sortCode;
      accountNumber = _rhs2;
      sortCode = _rhs3;
      return ;
    }
    public Dafny.BigRational getMonthlyIncome()
    {
      Dafny.BigRational income = Dafny.BigRational.ZERO;
      income = (this).monthlyIncome;
      return income;
    }
    public Dafny.BigRational getMonthlyOutgoings()
    {
      Dafny.BigRational outgoings = Dafny.BigRational.ZERO;
      outgoings = (this).monthlyOutgoings;
      return outgoings;
    }
    public BigInteger getCustomerReference()
    {
      BigInteger reference = BigInteger.Zero;
      reference = (this).customerReference;
      return reference;
    }
    public void printCustomerDetails()
    {
      Dafny.ISequence<Dafny.Rune> _15_ref;
      _15_ref = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Customer reference number: ");
      Dafny.ISequence<Dafny.Rune> _16_name;
      _16_name = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Customer name: ");
      Dafny.ISequence<Dafny.Rune> _17_age;
      _17_age = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Customer age: ");
      Dafny.ISequence<Dafny.Rune> _18_acc;
      _18_acc = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Customer account number: ");
      Dafny.ISequence<Dafny.Rune> _19_sort;
      _19_sort = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Customer sort code: ");
      Dafny.ISequence<Dafny.Rune> _20_income;
      _20_income = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Customer monthly income: £");
      Dafny.ISequence<Dafny.Rune> _21_outgoings;
      _21_outgoings = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Customer monthly expenditure: £");
      Dafny.Helpers.Print((_15_ref).ToVerbatimString(false));
      Dafny.Helpers.Print(((this).customerReference));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
      Dafny.Helpers.Print((_16_name).ToVerbatimString(false));
      Dafny.Helpers.Print(((this).name).ToVerbatimString(false));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
      Dafny.Helpers.Print((_17_age).ToVerbatimString(false));
      Dafny.Helpers.Print(((this).age));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
      Dafny.Helpers.Print((_18_acc).ToVerbatimString(false));
      Dafny.Helpers.Print(((this).accountNumber).ToVerbatimString(false));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
      Dafny.Helpers.Print((_19_sort).ToVerbatimString(false));
      Dafny.Helpers.Print(((this).sortCode).ToVerbatimString(false));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
      Dafny.Helpers.Print((_20_income).ToVerbatimString(false));
      Dafny.Helpers.Print(((this).monthlyIncome));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
      Dafny.Helpers.Print((_21_outgoings).ToVerbatimString(false));
      Dafny.Helpers.Print(((this).monthlyOutgoings));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
    }
    public Dafny.ISequence<Dafny.Rune> _name {get; set;}
    public Dafny.ISequence<Dafny.Rune> name { get {
      return this._name;
    } }
    public BigInteger _age {get; set;}
    public BigInteger age { get {
      return this._age;
    } }
    public Dafny.ISequence<Dafny.Rune> _accountNumber {get; set;}
    public Dafny.ISequence<Dafny.Rune> accountNumber { get {
      return this._accountNumber;
    } }
    public Dafny.ISequence<Dafny.Rune> _sortCode {get; set;}
    public Dafny.ISequence<Dafny.Rune> sortCode { get {
      return this._sortCode;
    } }
    public Dafny.BigRational _monthlyIncome {get; set;}
    public Dafny.BigRational monthlyIncome { get {
      return this._monthlyIncome;
    } }
    public Dafny.BigRational _monthlyOutgoings {get; set;}
    public Dafny.BigRational monthlyOutgoings { get {
      return this._monthlyOutgoings;
    } }
    public BigInteger _customerReference {get; set;}
    public BigInteger customerReference { get {
      return this._customerReference;
    } }
  }
} // end of namespace User
namespace BankSystem {


  public partial class Bank {
    public Bank() {
      this.capitalFundValue = BigInteger.Zero;
      this.reservedFunds = BigInteger.Zero;
      this.loans = Dafny.Set<Product.PersonalLoan>.Empty;
      this.customers = Dafny.Set<User.Customer>.Empty;
      this.customerLoans = Dafny.Map<BigInteger, BigInteger>.Empty;
      this.nextCustomerReference = BigInteger.Zero;
      this.nextLoanReference = BigInteger.Zero;
      this.capitalMutexAcquired = false;
      this.capitalMutexOwner = ((Product.PersonalLoan)null);
      this.reservedMutexAcquired = false;
      this.reservedMutexOwner = ((Product.PersonalLoan)null);
      this._referenceAgency = default(Support.CreditReferenceAgency);
    }
    public BigInteger capitalFundValue {get; set;}
    public BigInteger reservedFunds {get; set;}
    public Dafny.ISet<Product.PersonalLoan> loans {get; set;}
    public Dafny.ISet<User.Customer> customers {get; set;}
    public Dafny.IMap<BigInteger,BigInteger> customerLoans {get; set;}
    public BigInteger nextCustomerReference {get; set;}
    public BigInteger nextLoanReference {get; set;}
    public bool capitalMutexAcquired {get; set;}
    public Product.PersonalLoan capitalMutexOwner {get; set;}
    public bool reservedMutexAcquired {get; set;}
    public Product.PersonalLoan reservedMutexOwner {get; set;}
    public void __ctor(BigInteger aValue, Support.CreditReferenceAgency aReferenceAgency)
    {
      (this).capitalFundValue = aValue;
      (this)._referenceAgency = aReferenceAgency;
      (this).nextCustomerReference = new BigInteger(1000000);
      (this).nextLoanReference = new BigInteger(1000000);
      (this).capitalMutexAcquired = false;
      (this).reservedMutexAcquired = false;
      (this).capitalMutexOwner = (Product.PersonalLoan)null;
      (this).reservedMutexOwner = (Product.PersonalLoan)null;
    }
    public void newApplication(Dafny.ISequence<Dafny.Rune> name, BigInteger age, Dafny.ISequence<Dafny.Rune> accountNumber, Dafny.ISequence<Dafny.Rune> sortCode, Dafny.BigRational monthlyIncome, Dafny.BigRational monthlyOutgoings, BigInteger requiredAmount, BigInteger repaymentPeriod)
    {
      (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("BEGINNING LOAN APPLICATION PROCESS"));
      Dafny.BigRational _22_interest;
      _22_interest = new Dafny.BigRational(BigInteger.Parse("0"), BigInteger.One);
      if (((new BigInteger(5000)) <= (requiredAmount)) && ((requiredAmount) <= (new BigInteger(7499)))) {
        _22_interest = new Dafny.BigRational(new BigInteger(136), BigInteger.Parse("10"));
      } else if (((new BigInteger(7500)) <= (requiredAmount)) && ((requiredAmount) <= (new BigInteger(10000)))) {
        _22_interest = new Dafny.BigRational(new BigInteger(63), BigInteger.Parse("10"));
      } else {
        throw new System.Exception("unreachable alternative");
      }
      BigInteger _23_ref;
      BigInteger _out3;
      _out3 = (this).getNextLoanReference();
      _23_ref = _out3;
      Product.PersonalLoan _24_loan;
      Product.PersonalLoan _nw0 = new Product.PersonalLoan();
      _nw0.__ctor(requiredAmount, repaymentPeriod, _22_interest, _23_ref);
      _24_loan = _nw0;
      if ((_24_loan) == (object) ((Product.PersonalLoan)null)) {
        (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ERROR: UNABLE TO CREATE LOAN"));
      }
      User.Customer _25_customer;
      bool _26_applicationStatus;
      User.Customer _out4;
      bool _out5;
      (this).registerApplication(name, age, accountNumber, sortCode, monthlyIncome, monthlyOutgoings, _24_loan, out _out4, out _out5);
      _25_customer = _out4;
      _26_applicationStatus = _out5;
      if (!(_26_applicationStatus)) {
        (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("LOAN APPLICATION PROCESS COMPLETE"));
        return ;
      }
      if ((_25_customer) == (object) ((User.Customer)null)) {
        (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ERROR: UNABLE TO CREATE CUSTOMER"));
        return ;
      }
      if (_26_applicationStatus) {
        bool _out6;
        _out6 = (this).processApplication(_25_customer, _24_loan);
        _26_applicationStatus = _out6;
      }
      if ((_26_applicationStatus) == (false)) {
        (_24_loan).setStatus(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rejected"));
      } else if ((_26_applicationStatus) == (true)) {
        (_24_loan).setStatus(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("approved"));
      } else {
        throw new System.Exception("unreachable alternative");
      }
      (this).completeApplication(_25_customer, _24_loan);
      (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("LOAN APPLICATION PROCESS COMPLETE"));
    }
    public void registerApplication(Dafny.ISequence<Dafny.Rune> name, BigInteger age, Dafny.ISequence<Dafny.Rune> accountNumber, Dafny.ISequence<Dafny.Rune> sortCode, Dafny.BigRational monthlyIncome, Dafny.BigRational monthlyOutgoings, Product.PersonalLoan aLoan, out User.Customer aCustomer, out bool isLoanRegistered)
    {
      aCustomer = ((User.Customer)null);
      isLoanRegistered = false;
      (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("BEGINNING APPLICATION REGISTRATION"));
      bool _27_loanRegistered;
      _27_loanRegistered = false;
      User.Customer _28_customer;
      User.Customer _out7;
      _out7 = (this).registerCustomer(name, age, accountNumber, sortCode, monthlyIncome, monthlyOutgoings);
      _28_customer = _out7;
      if ((_28_customer) == (object) ((User.Customer)null)) {
        User.Customer _rhs4 = _28_customer;
        bool _rhs5 = _27_loanRegistered;
        aCustomer = _rhs4;
        isLoanRegistered = _rhs5;
        return ;
      }
      bool _out8;
      _out8 = (this).registerLoan(aLoan);
      _27_loanRegistered = _out8;
      BigInteger _29_customerRef;
      BigInteger _out9;
      _out9 = (_28_customer).getCustomerReference();
      _29_customerRef = _out9;
      BigInteger _30_loanRef;
      BigInteger _out10;
      _out10 = (aLoan).getLoanReference();
      _30_loanRef = _out10;
      (this).associateCustomerLoan(_30_loanRef, _29_customerRef);
      Dafny.ISequence<Dafny.Rune> _31_message = Dafny.Sequence<Dafny.Rune>.Empty;
      if (_27_loanRegistered) {
        _31_message = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Your application has been recieved and will be processed");
      } else {
        _31_message = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("We are sorry that your application cannot be processed at this time.");
      }
      (this).informCustomer(_28_customer, _31_message);
      (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("APPLICATION REGISTRATION COMPLETE"));
      User.Customer _rhs6 = _28_customer;
      bool _rhs7 = _27_loanRegistered;
      aCustomer = _rhs6;
      isLoanRegistered = _rhs7;
      return ;
    }
    public User.Customer registerCustomer(Dafny.ISequence<Dafny.Rune> name, BigInteger age, Dafny.ISequence<Dafny.Rune> accountNumber, Dafny.ISequence<Dafny.Rune> sortCode, Dafny.BigRational monthlyIncome, Dafny.BigRational monthlyOutgoings)
    {
      User.Customer newCustomer = ((User.Customer)null);
      (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("BEGINNING CUSTOMER REGISTRATION"));
      BigInteger _32_ref;
      BigInteger _out11;
      _out11 = (this).getNextCustomerReference();
      _32_ref = _out11;
      User.Customer _33_aCustomer;
      User.Customer _nw1 = new User.Customer();
      _nw1.__ctor(name, age, accountNumber, sortCode, monthlyIncome, monthlyOutgoings, _32_ref);
      _33_aCustomer = _nw1;
      if ((_33_aCustomer) == (object) ((User.Customer)null)) {
        newCustomer = _33_aCustomer;
        return newCustomer;
      }
      (this).addCustomer(_33_aCustomer);
      (_33_aCustomer).printCustomerDetails();
      (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("CUSTOMER REGISTRATION COMPLETE"));
      newCustomer = _33_aCustomer;
      return newCustomer;
    }
    public bool registerLoan(Product.PersonalLoan aLoan)
    {
      bool success = false;
      (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("BEGINNING LOAN REGISTRATION"));
      bool _34_accessCapitalFund;
      _34_accessCapitalFund = false;
      bool _35_accessReservedFund;
      _35_accessReservedFund = false;
      while (!(_34_accessCapitalFund)) {
        bool _out12;
        _out12 = (this).requestCapitalAccess(aLoan);
        _34_accessCapitalFund = _out12;
      }
      while (!(_35_accessReservedFund)) {
        bool _out13;
        _out13 = (this).requestReservedAccess(aLoan);
        _35_accessReservedFund = _out13;
      }
      bool _36_verified;
      _36_verified = false;
      BigInteger _37_loanAmount;
      BigInteger _out14;
      _out14 = (aLoan).getRequiredAmount();
      _37_loanAmount = _out14;
      bool _out15;
      _out15 = (this).verifyCapitalAmount(this.capitalFundValue, (this).capitalFundMinimumThreshold, _37_loanAmount);
      _36_verified = _out15;
      if (_36_verified) {
        (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("CAPITAL FUND VERIFICATION PASSED"));
        bool _out16;
        _out16 = (this).reserveLoanFunds(aLoan);
        _36_verified = _out16;
      } else {
        (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("CAPITAL FUND VERIFICATION FAILED"));
      }
      if (_36_verified) {
        (this).addLoan(aLoan);
      }
      if (!(_36_verified)) {
        (aLoan).setStatus(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rejected"));
      }
      (aLoan).printLoanDetails();
      (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("LOAN REGISTRATION COMPLETE"));
      (this).releaseReservedAccess(aLoan);
      (this).releaseCapitalAccess(aLoan);
      success = _36_verified;
      return success;
    }
    public void associateCustomerLoan(BigInteger loanReferenceNumber, BigInteger customerReferenceNumber)
    {
      (this).customerLoans = Dafny.Map<BigInteger, BigInteger>.FromElements(new Dafny.Pair<BigInteger, BigInteger>(loanReferenceNumber, customerReferenceNumber));
    }
    public bool processApplication(User.Customer aCustomer, Product.PersonalLoan aLoan)
    {
      bool isSuccessful = false;
      (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("BEGINNING PROCESSING APPLICATION"));
      bool _38_verified;
      _38_verified = false;
      BigInteger _39_customerAge;
      BigInteger _out17;
      _out17 = (aCustomer).getAge();
      _39_customerAge = _out17;
      bool _out18;
      _out18 = (aLoan).verifyAgeCriteria(_39_customerAge);
      _38_verified = _out18;
      if (!(_38_verified)) {
        (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("AGE CRITERIA VERIFICATION FAILED"));
        Dafny.ISequence<Dafny.Rune> _40_message;
        _40_message = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Your application has failed the loan age criteria process");
        (this).informCustomer(aCustomer, _40_message);
        isSuccessful = _38_verified;
        return isSuccessful;
      } else {
        (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("AGE CRITERIA VERIFICATION PASSED"));
      }
      Dafny.BigRational _41_customerMonthlyIncome;
      Dafny.BigRational _out19;
      _out19 = (aCustomer).getMonthlyIncome();
      _41_customerMonthlyIncome = _out19;
      Dafny.BigRational _42_customerMonthlyOutgoings;
      Dafny.BigRational _out20;
      _out20 = (aCustomer).getMonthlyOutgoings();
      _42_customerMonthlyOutgoings = _out20;
      bool _out21;
      _out21 = (aLoan).verifyIncomeCriteria(_41_customerMonthlyIncome, _42_customerMonthlyOutgoings);
      _38_verified = _out21;
      if (!(_38_verified)) {
        (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("INCOME CRITERIA VERIFICATION FAILED"));
        Dafny.ISequence<Dafny.Rune> _43_message;
        _43_message = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Your application has failed the loan income criteria process");
        (this).informCustomer(aCustomer, _43_message);
        isSuccessful = _38_verified;
        return isSuccessful;
      } else {
        (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("AGE CRITERIA VERIFICATION PASSED"));
      }
      BigInteger _44_customerCreditScore;
      BigInteger _out22;
      _out22 = (this).obtainCustomerCreditScore((this).referenceAgency, aCustomer);
      _44_customerCreditScore = _out22;
      bool _out23;
      _out23 = (aLoan).verifyCreditScore(_44_customerCreditScore);
      _38_verified = _out23;
      if (!(_38_verified)) {
        (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("CREDIT SCORE CRITERIA VERIFICATION FAILED"));
        Dafny.ISequence<Dafny.Rune> _45_message;
        _45_message = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Your application has failed the credit score criteria process");
        (this).informCustomer(aCustomer, _45_message);
        isSuccessful = _38_verified;
        return isSuccessful;
      } else {
        (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("CREDIT SCORE CRITERIA VERIFICATION PASSED"));
      }
      (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("PROCESSING APPLICATION COMPLETE"));
      isSuccessful = _38_verified;
      return isSuccessful;
    }
    public void addLoan(Product.PersonalLoan aLoan)
    {
      (this).loans = Dafny.Set<Product.PersonalLoan>.Union(this.loans, Dafny.Set<Product.PersonalLoan>.FromElements(aLoan));
    }
    public void addCustomer(User.Customer aCustomer)
    {
      (this).customers = Dafny.Set<User.Customer>.Union(this.customers, Dafny.Set<User.Customer>.FromElements(aCustomer));
    }
    public void informCustomer(User.Customer aCustomer, Dafny.ISequence<Dafny.Rune> message)
    {
      Dafny.ISequence<Dafny.Rune> _46_customerName;
      Dafny.ISequence<Dafny.Rune> _out24;
      _out24 = (aCustomer).getName();
      _46_customerName = _out24;
      Dafny.ISequence<Dafny.Rune> _47_customerMessage;
      _47_customerMessage = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Customer Message: "), _46_customerName), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" :: ")), message);
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
      Dafny.Helpers.Print((_47_customerMessage).ToVerbatimString(false));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n\n")).ToVerbatimString(false));
    }
    public BigInteger obtainCustomerCreditScore(Support.CreditReferenceAgency referenceAgency, User.Customer aCustomer)
    {
      BigInteger score = BigInteger.Zero;
      (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("CUSTOMER CREDIT SCORE REQUESTED"));
      Dafny.ISequence<Dafny.Rune> _48_customerName;
      Dafny.ISequence<Dafny.Rune> _out25;
      _out25 = (aCustomer).getName();
      _48_customerName = _out25;
      BigInteger _49_aScore;
      BigInteger _out26;
      _out26 = (referenceAgency).getCreditScore(_48_customerName);
      _49_aScore = _out26;
      (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("CUSTOMER CREDIT SCORE OBTAINED"));
      Dafny.ISequence<Dafny.Rune> _50_scoreMessage;
      _50_scoreMessage = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Customer credit score: "), _48_customerName), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": "));
      Dafny.Helpers.Print((_50_scoreMessage).ToVerbatimString(false));
      Dafny.Helpers.Print((_49_aScore));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
      score = _49_aScore;
      return score;
    }
    public bool verifyCapitalAmount(BigInteger fundValue, BigInteger fundMinimum, BigInteger loanAmount)
    {
      bool isVerified = false;
      (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("CAPITAL FUND VERIFICATION COMPLETE"));
      isVerified = ((fundValue) - (loanAmount)) >= (fundMinimum);
      return isVerified;
    }
    public bool reserveLoanFunds(Product.PersonalLoan theLoan)
    {
      bool success = false;
      (this).printFundValues();
      BigInteger _51_loanAmount;
      BigInteger _out27;
      _out27 = (theLoan).getRequiredAmount();
      _51_loanAmount = _out27;
      BigInteger _52_startingCapitalfund;
      _52_startingCapitalfund = this.capitalFundValue;
      BigInteger _53_startingReserveFund;
      _53_startingReserveFund = this.reservedFunds;
      (this).capitalFundValue = (this.capitalFundValue) - (_51_loanAmount);
      (this).reservedFunds = (this.reservedFunds) + (_51_loanAmount);
      BigInteger _54_finishingCapitalFund;
      _54_finishingCapitalFund = this.capitalFundValue;
      BigInteger _55_finishingReservedFund;
      _55_finishingReservedFund = this.reservedFunds;
      bool _56_both;
      _56_both = ((_54_finishingCapitalFund) == ((_52_startingCapitalfund) - (_51_loanAmount))) && ((_55_finishingReservedFund) == ((_53_startingReserveFund) + (_51_loanAmount)));
      (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("LOAN FUNDS RESERVED"));
      (this).printFundValues();
      success = _56_both;
      return success;
    }
    public void completeApplication(User.Customer theCustomer, Product.PersonalLoan theLoan)
    {
      (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("BEGINNING APPLICATION COMPLETION PROCESS"));
      (theLoan).printLoanDetails();
      Dafny.ISequence<Dafny.Rune> _57_loanStatus;
      Dafny.ISequence<Dafny.Rune> _out28;
      _out28 = (theLoan).getStatus();
      _57_loanStatus = _out28;
      if ((_57_loanStatus).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rejected"))) {
        Dafny.ISequence<Dafny.Rune> _58_message1;
        _58_message1 = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("We are sorry that your application cannot be processed at this time.");
        bool _59_fundsReleased;
        bool _out29;
        _out29 = (this).releaseLoanFunds(theLoan);
        _59_fundsReleased = _out29;
        if (_59_fundsReleased) {
          Dafny.ISequence<Dafny.Rune> _60_message2;
          _60_message2 = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("LOAN FUNDS RELEASED");
          (this).logEvent(_60_message2);
          (this).informCustomer(theCustomer, _58_message1);
        }
      }
      if ((_57_loanStatus).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("approved"))) {
        bool _61_success;
        bool _out30;
        _out30 = (this).transferLoanToCustomer(theLoan, theCustomer);
        _61_success = _out30;
        Dafny.ISequence<Dafny.Rune> _62_accNo;
        Dafny.ISequence<Dafny.Rune> _63_sortCode;
        Dafny.ISequence<Dafny.Rune> _out31;
        Dafny.ISequence<Dafny.Rune> _out32;
        (theCustomer).getPaymentDetails(out _out31, out _out32);
        _62_accNo = _out31;
        _63_sortCode = _out32;
        Dafny.ISequence<Dafny.Rune> _64_message;
        _64_message = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Your application has been successful. The required loan amount will be transferred to account number: "), _62_accNo), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" sort code: ")), _63_sortCode);
        (this).informCustomer(theCustomer, _64_message);
      }
    }
    public bool releaseLoanFunds(Product.PersonalLoan theLoan)
    {
      bool success = false;
      bool _65_accessCapitalFund;
      _65_accessCapitalFund = false;
      bool _66_accessReservedFund;
      _66_accessReservedFund = false;
      while (!(_65_accessCapitalFund)) {
        bool _out33;
        _out33 = (this).requestCapitalAccess(theLoan);
        _65_accessCapitalFund = _out33;
      }
      while (!(_66_accessReservedFund)) {
        bool _out34;
        _out34 = (this).requestReservedAccess(theLoan);
        _66_accessReservedFund = _out34;
      }
      BigInteger _67_loanAmount;
      BigInteger _out35;
      _out35 = (theLoan).getRequiredAmount();
      _67_loanAmount = _out35;
      BigInteger _68_startingCapitalfund;
      _68_startingCapitalfund = this.capitalFundValue;
      BigInteger _69_startingReserveFund;
      _69_startingReserveFund = this.reservedFunds;
      (this).capitalFundValue = (this.capitalFundValue) + (_67_loanAmount);
      (this).reservedFunds = (this.reservedFunds) - (_67_loanAmount);
      BigInteger _70_finishingCapitalFund;
      _70_finishingCapitalFund = this.capitalFundValue;
      BigInteger _71_finishingReservedFund;
      _71_finishingReservedFund = this.reservedFunds;
      bool _72_both;
      _72_both = ((_70_finishingCapitalFund) == ((_68_startingCapitalfund) + (_67_loanAmount))) && ((_71_finishingReservedFund) == ((_69_startingReserveFund) - (_67_loanAmount)));
      (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("RESERVED LOAN FUNDS RELEASED"));
      (this).printFundValues();
      (this).releaseReservedAccess(theLoan);
      (this).releaseCapitalAccess(theLoan);
      success = _72_both;
      return success;
    }
    public bool transferLoanToCustomer(Product.PersonalLoan theLoan, User.Customer theCustomer)
    {
      bool success = false;
      bool _73_access;
      _73_access = false;
      while (!(_73_access)) {
        bool _out36;
        _out36 = (this).requestReservedAccess(theLoan);
        _73_access = _out36;
      }
      Dafny.ISequence<Dafny.Rune> _74_accNo;
      Dafny.ISequence<Dafny.Rune> _75_sortCode;
      Dafny.ISequence<Dafny.Rune> _out37;
      Dafny.ISequence<Dafny.Rune> _out38;
      (theCustomer).getPaymentDetails(out _out37, out _out38);
      _74_accNo = _out37;
      _75_sortCode = _out38;
      Dafny.ISequence<Dafny.Rune> _76_message;
      _76_message = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Transfer funds: account number:"), _74_accNo), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" sort code: ")), _75_sortCode);
      BigInteger _77_loanAmount;
      BigInteger _out39;
      _out39 = (theLoan).getRequiredAmount();
      _77_loanAmount = _out39;
      BigInteger _78_startingReserveFund;
      _78_startingReserveFund = this.reservedFunds;
      (this).reservedFunds = (this.reservedFunds) - (_77_loanAmount);
      BigInteger _79_finishingReservedFund;
      _79_finishingReservedFund = this.reservedFunds;
      bool _80_transferred;
      _80_transferred = (_79_finishingReservedFund) == ((_78_startingReserveFund) - (_77_loanAmount));
      (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("LOAN FUNDS TRANSFERRED"));
      (this).printFundValues();
      (this).releaseReservedAccess(theLoan);
      success = _80_transferred;
      return success;
    }
    public void logEvent(Dafny.ISequence<Dafny.Rune> eventMessage)
    {
      Dafny.ISequence<Dafny.Rune> _81_message;
      _81_message = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("System Log: Event :: "), eventMessage);
      Dafny.Helpers.Print((_81_message).ToVerbatimString(false));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
    }
    public void printFundValues()
    {
      Dafny.ISequence<Dafny.Rune> _82_cfv;
      _82_cfv = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("CAPITAL FUND VALUE :: £");
      Dafny.ISequence<Dafny.Rune> _83_rfv;
      _83_rfv = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("RESERVED FUND VALUE :: £");
      Dafny.Helpers.Print((_82_cfv).ToVerbatimString(false));
      Dafny.Helpers.Print((this.capitalFundValue));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
      Dafny.Helpers.Print((_83_rfv).ToVerbatimString(false));
      Dafny.Helpers.Print((this.reservedFunds));
      Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
    }
    public BigInteger getNextLoanReference()
    {
      BigInteger @ref = BigInteger.Zero;
      BigInteger _84_oldRef;
      _84_oldRef = this.nextLoanReference;
      (this).nextLoanReference = (this.nextLoanReference) + (BigInteger.One);
      @ref = _84_oldRef;
      return @ref;
    }
    public BigInteger getNextCustomerReference()
    {
      BigInteger @ref = BigInteger.Zero;
      BigInteger _85_oldRef;
      _85_oldRef = this.nextCustomerReference;
      (this).nextCustomerReference = (this.nextCustomerReference) + (BigInteger.One);
      @ref = _85_oldRef;
      return @ref;
    }
    public bool requestCapitalAccess(Product.PersonalLoan loan)
    {
      bool granted = false;
      if (!(this.capitalMutexAcquired)) {
        (this).capitalMutexAcquired = true;
        (this).capitalMutexOwner = loan;
        granted = true;
        (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("CAPITAL FUND MUTEX ACQUIRED"));
        return granted;
      } else {
        granted = false;
        return granted;
      }
    }
    public void releaseCapitalAccess(Product.PersonalLoan loan)
    {
      if ((this.capitalMutexAcquired) && ((this.capitalMutexOwner) == (object) (loan))) {
        (this).capitalMutexOwner = (Product.PersonalLoan)null;
        (this).capitalMutexAcquired = false;
        (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("CAPITAL FUND MUTEX RELEASED"));
      }
    }
    public bool requestReservedAccess(Product.PersonalLoan loan)
    {
      bool granted = false;
      if (!(this.reservedMutexAcquired)) {
        (this).reservedMutexAcquired = true;
        (this).reservedMutexOwner = loan;
        (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("RESERVED FUND MUTEX ACQUIRED"));
        granted = true;
        return granted;
      } else {
        granted = false;
        return granted;
      }
    }
    public void releaseReservedAccess(Product.PersonalLoan loan)
    {
      if ((this.reservedMutexAcquired) && ((this.reservedMutexOwner) == (object) (loan))) {
        (this).reservedMutexOwner = (Product.PersonalLoan)null;
        (this).reservedMutexAcquired = false;
        (this).logEvent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("RESERVED FUND MUTEX RELEASED"));
      }
    }
    public Support.CreditReferenceAgency _referenceAgency {get; set;}
    public Support.CreditReferenceAgency referenceAgency { get {
      return this._referenceAgency;
    } }
    public BigInteger capitalFundMinimumThreshold { get {
      return new BigInteger(500000);
    } }
  }
} // end of namespace BankSystem
namespace _module {

} // end of namespace _module
